apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: car-simulator
    app.kubernetes.io/part-of: Bobbycar
  name: car-simulator
  annotations:
    app.openshift.io/connects-to: bobbycar-amq-mqtt-ss
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentConfig: car-simulator
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: car-simulator
        deploymentConfig: car-simulator
      name: car-simulator
    spec:
      volumes:
        - name: config
          configMap:
            name: car-simulator-config
            defaultMode: 420
        - name: keystore-volume
          emptyDir: {}
      initContainers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: pem-to-truststore
          command:
            - /bin/bash
          env:
            - name: svc_ca_bundle
              value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
            - name: truststore_jks
              value: /var/run/secrets/java.io/keystores/truststore.jks
            - name: password
              value: xVu212U35%?sseTrwsaahh21
            - name: router_url
              value: oauth-openshift.apps.ocp3.stormshift.coe.muc.redhat.com
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores
          terminationMessagePolicy: File
          image: 'registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16'
          args:
            - '-c'
            - >-
              [ ! -f $truststore_jks ] &&
              router_ca_bundle=/var/run/secrets/java.io/keystores/router-ca.crt;
              all_ca_bundle=/var/run/secrets/java.io/keystores/all-ca.crt &&
              echo | openssl s_client -showcerts -connect $router_url:443
              2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p'
              >  $router_ca_bundle && cat $router_ca_bundle $svc_ca_bundle >
              $all_ca_bundle  && csplit -z -f crt- $all_ca_bundle '/-----BEGIN
              CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import
              -noprompt -keystore $truststore_jks -file $file -storepass
              $password -alias service-$file; done
      containers:
      - name: car-simulator
        image: car-simulator:latest
        imagePullPolicy: Always
        volumeMounts:
            - name: config
              readOnly: true
              mountPath: /opt/routes
            - name: keystore-volume
              mountPath: /var/run/secrets/java.io/keystores
        env:
            - name: com.redhat.bobbycar.carsim.route
              value: /opt/routes
            - name: com.redhat.bobbycar.carsim.cars
              value: '3'
            - name: com.redhat.bobbycar.carsim.factor
              value: '5'
            - name: com.redhat.bobbycar.carsim.repeat
              value: 'true'
            - name: com.redhat.bobbycar.carsim.kafka.truststore
              value: '/var/run/secrets/java.io/keystores/truststore.jks'
            - name: com.redhat.bobbycar.carsim.kafka.trustStorePassword
              value: 'xVu212U35%?sseTrwsaahh21'
            - name: com.redhat.bobbycar.carsim.delay
              value: '1000'
            - name: com.redhat.bobbycar.carsim.kafka.apiKey
              value: ''
            - name: quarkus.log.level
              value: 'INFO'
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
        envFrom:
          - configMapRef: 
              name: car-simulator-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe: 
          httpGet:   
            path: /health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 15  
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - car-simulator
        from:
          kind: ImageStreamTag
          name: 'car-simulator:latest'
      type: ImageChange
    - type: ConfigChange
